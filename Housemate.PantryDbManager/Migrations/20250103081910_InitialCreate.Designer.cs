// <auto-generated />
using Housemate.PantryDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Housemate.PantryDbManager.Migrations
{
    [DbContext(typeof(PantryDbContext))]
    [Migration("20250103081910_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("pantry_category_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("pantry_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("pantry_location_hilo")
                .IncrementsBy(10);

            modelBuilder.Entity("Housemate.PantryDb.PantryCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "pantry_category_hilo");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.ToTable("PantryCategory", (string)null);
                });

            modelBuilder.Entity("Housemate.PantryDb.PantryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "pantry_hilo");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("PantryCategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("PantryLocationId")
                        .HasColumnType("integer");

                    b.Property<float>("Quantity")
                        .HasPrecision(5, 1)
                        .HasColumnType("real");

                    b.Property<float?>("Size")
                        .HasPrecision(5, 1)
                        .HasColumnType("real");

                    b.Property<string>("Units")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PantryCategoryId");

                    b.HasIndex("PantryLocationId");

                    b.ToTable("Pantry", (string)null);
                });

            modelBuilder.Entity("Housemate.PantryDb.PantryLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "pantry_location_hilo");

                    b.Property<bool>("IsFreezer")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFridge")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("PantryLocation", (string)null);
                });

            modelBuilder.Entity("Housemate.PantryDb.PantryItem", b =>
                {
                    b.HasOne("Housemate.PantryDb.PantryCategory", "PantryCategory")
                        .WithMany()
                        .HasForeignKey("PantryCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Housemate.PantryDb.PantryLocation", "PantryLocation")
                        .WithMany()
                        .HasForeignKey("PantryLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PantryCategory");

                    b.Navigation("PantryLocation");
                });
#pragma warning restore 612, 618
        }
    }
}
